"""
Django settings for flynn_updater project.

Generated by 'django-admin startproject' using Django 1.10.

For more information on this file, see
https://docs.djangoproject.com/en/1.10/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.10/ref/settings/
"""

import os
import environ
import dotenv

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.10/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'mpf*!re@^s@@=++((gp34v067#qu)9bmzb6n!k)c3x&j60vd33'

# SECURITY WARNING: don't run with debug turned on in production!
# DEBUG = False

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django_celery_beat',
    'django_celery_results',
    'django_extensions',
    'flynn_updater'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'flynn_updater.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'flynn_updater.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.10/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/1.10/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.10/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.10/howto/static-files/

STATIC_URL = '/static/'

# Load AWS config from ENV
dotenv.load()
env = environ.Env()
AWS_ACCESS_KEY_ID = env('AWS_ACCESS_KEY_ID')
AWS_SECRET_ACCESS_KEY = env('AWS_SECRET_ACCESS_KEY')
AWS_DEFAULT_REGION = env('AWS_DEFAULT_REGION')
AWS_ROUTE53_ZONE = env('AWS_ROUTE53_ZONE')
AWS_ROUTE53_DOMAIN = env('AWS_ROUTE53_DOMAIN')
AWS_AUTOSCALING_GROUP = env('AWS_AUTOSCALING_GROUP')
FLYNN_PIN = env('FLYNN_PIN')
FLYNN_KEY = env('FLYNN_KEY')
SSH_USER = env('SSH_USER', default='ubuntu')
SSH_KEY = env('SSH_KEY')
TIMEZONE = env('TIMEZONE', default='UTC')
REDIS_URL = env('REDIS_URL', default='redis://localhost:6379/0')
DEBUG = env('DEBUG', default=False)
DJANGO_LOG_LEVEL = env('DJANGO_LOG_LEVEL', default='INFO')
S3_BLOBSTORE = env('S3_BLOBSTORE')
FLYNN_DISCOVERY_TOKEN = env('FLYNN_DISCOVERY_TOKEN')
FLYNN_DISCOVERY_URL = env('FLYNN_DISCOVERY_URL', default='https://discovery.flynn.io/clusters')
FLYNN_PATH = env('FLYNN_PATH', default='/app/flynn')
RDS_DB_ID = env('RDS_DB_ID')
DB_USER = env('DB_USER')
DB_PASSWORD = env('DB_PASSWORD')
DB_OPTS = env('DB_OPTS', default='?sslmode=require')
DB_PORT = env('DB_PORT', default=5432)
ELB = env('ELB', default='')
CLUSTER_PRIVATE = env('CLUSTER_PRIVATE', default=False)

FLYNN_CLI_INSTALL = 'L=%s && curl -sSL -A "`uname -sp`" https://dl.flynn.io/cli | zcat >$L && chmod +x $L' % FLYNN_PATH
FLYNN_CLI_SETUP = '%s cluster add -p %s default %s %s' % (FLYNN_PATH, FLYNN_PIN, AWS_ROUTE53_DOMAIN, FLYNN_KEY)

# Celery settings
CELERY_BROKER_URL = REDIS_URL
CELERY_ACCEPT_CONTENT = ['json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_BACKEND = REDIS_URL
CELERYBEAT_SCHEDULE = {}

# Logging
CELERYD_REDIRECT_STDOUTS_LEVEL = DJANGO_LOG_LEVEL
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
        }
    },
    'loggers': {
        'django': {
            'handlers': ['console'],
            'level': DJANGO_LOG_LEVEL
        }
    }
}
